"use strict";

require("coffeescript/register");
var t = _interopRequireWildcard(require("@dashkite/genie"));
var b = _interopRequireWildcard(require("@dashkite/masonry"));
var _index = require("../src/index");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
t.define("clean", function () {
  return b.rm("build");
});
t.define("build", "clean", b.start([b.glob(["{src,test}/**/*.coffee"], "."), b.read, b.tr((0, _index.coffee)("node")), b.extension(".js"), b.write("build")]));
t.define("test", function () {
  return require("../test/index");
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJyZXF1aXJlIiwidCIsIl9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkIiwiYiIsIl9pbmRleCIsIl9nZXRSZXF1aXJlV2lsZGNhcmRDYWNoZSIsIm5vZGVJbnRlcm9wIiwiV2Vha01hcCIsImNhY2hlQmFiZWxJbnRlcm9wIiwiY2FjaGVOb2RlSW50ZXJvcCIsIm9iaiIsIl9fZXNNb2R1bGUiLCJkZWZhdWx0IiwiY2FjaGUiLCJoYXMiLCJnZXQiLCJuZXdPYmoiLCJoYXNQcm9wZXJ0eURlc2NyaXB0b3IiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsImtleSIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsImRlc2MiLCJzZXQiLCJkZWZpbmUiLCJybSIsInN0YXJ0IiwiZ2xvYiIsInJlYWQiLCJ0ciIsImNvZmZlZSIsImV4dGVuc2lvbiIsIndyaXRlIl0sInNvdXJjZXMiOlsidGFza3MvaW5kZXguY29mZmVlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBcImNvZmZlZXNjcmlwdC9yZWdpc3RlclwiXG5pbXBvcnQgKiBhcyB0IGZyb20gXCJAZGFzaGtpdGUvZ2VuaWVcIlxuaW1wb3J0ICogYXMgYiBmcm9tIFwiQGRhc2hraXRlL21hc29ucnlcIlxuaW1wb3J0IHtjb2ZmZWV9IGZyb20gXCIuLi9zcmNcIlxuXG50LmRlZmluZSBcImNsZWFuXCIsIC0+IGIucm0gXCJidWlsZFwiXG5cbnQuZGVmaW5lIFwiYnVpbGRcIiwgXCJjbGVhblwiLCBiLnN0YXJ0IFtcbiAgYi5nbG9iIFsgXCJ7c3JjLHRlc3R9LyoqLyouY29mZmVlXCIgXSwgXCIuXCJcbiAgYi5yZWFkXG4gIGIudHIgY29mZmVlIFwibm9kZVwiXG4gIGIuZXh0ZW5zaW9uIFwiLmpzXCJcbiAgYi53cml0ZSBcImJ1aWxkXCJcbl1cblxudC5kZWZpbmUgXCJ0ZXN0XCIsIC0+IHJlcXVpcmUgXCIuLi90ZXN0XCJcbiJdLCJtYXBwaW5ncyI6Ijs7QUFBQUEsT0FBQTtBQUNBLElBQUFDLENBQUEsR0FBQUMsdUJBQUEsQ0FBQUYsT0FBQTtBQUNBLElBQUFHLENBQUEsR0FBQUQsdUJBQUEsQ0FBQUYsT0FBQTtBQUNBLElBQUFJLE1BQUEsR0FBQUosT0FBQTtBQUFBLFNBQUFLLHlCQUFBQyxXQUFBLGVBQUFDLE9BQUEsa0NBQUFDLGlCQUFBLE9BQUFELE9BQUEsUUFBQUUsZ0JBQUEsT0FBQUYsT0FBQSxZQUFBRix3QkFBQSxZQUFBQSxDQUFBQyxXQUFBLFdBQUFBLFdBQUEsR0FBQUcsZ0JBQUEsR0FBQUQsaUJBQUEsS0FBQUYsV0FBQTtBQUFBLFNBQUFKLHdCQUFBUSxHQUFBLEVBQUFKLFdBQUEsU0FBQUEsV0FBQSxJQUFBSSxHQUFBLElBQUFBLEdBQUEsQ0FBQUMsVUFBQSxXQUFBRCxHQUFBLFFBQUFBLEdBQUEsb0JBQUFBLEdBQUEsd0JBQUFBLEdBQUEsNEJBQUFFLE9BQUEsRUFBQUYsR0FBQSxVQUFBRyxLQUFBLEdBQUFSLHdCQUFBLENBQUFDLFdBQUEsT0FBQU8sS0FBQSxJQUFBQSxLQUFBLENBQUFDLEdBQUEsQ0FBQUosR0FBQSxZQUFBRyxLQUFBLENBQUFFLEdBQUEsQ0FBQUwsR0FBQSxTQUFBTSxNQUFBLFdBQUFDLHFCQUFBLEdBQUFDLE1BQUEsQ0FBQUMsY0FBQSxJQUFBRCxNQUFBLENBQUFFLHdCQUFBLFdBQUFDLEdBQUEsSUFBQVgsR0FBQSxRQUFBVyxHQUFBLGtCQUFBSCxNQUFBLENBQUFJLFNBQUEsQ0FBQUMsY0FBQSxDQUFBQyxJQUFBLENBQUFkLEdBQUEsRUFBQVcsR0FBQSxTQUFBSSxJQUFBLEdBQUFSLHFCQUFBLEdBQUFDLE1BQUEsQ0FBQUUsd0JBQUEsQ0FBQVYsR0FBQSxFQUFBVyxHQUFBLGNBQUFJLElBQUEsS0FBQUEsSUFBQSxDQUFBVixHQUFBLElBQUFVLElBQUEsQ0FBQUMsR0FBQSxLQUFBUixNQUFBLENBQUFDLGNBQUEsQ0FBQUgsTUFBQSxFQUFBSyxHQUFBLEVBQUFJLElBQUEsWUFBQVQsTUFBQSxDQUFBSyxHQUFBLElBQUFYLEdBQUEsQ0FBQVcsR0FBQSxTQUFBTCxNQUFBLENBQUFKLE9BQUEsR0FBQUYsR0FBQSxNQUFBRyxLQUFBLElBQUFBLEtBQUEsQ0FBQWEsR0FBQSxDQUFBaEIsR0FBQSxFQUFBTSxNQUFBLFlBQUFBLE1BQUE7QUFFQWYsQ0FBQyxDQUFDMEIsTUFBRixDQUFTLE9BQVQsRUFBa0I7U0FBR3hCLENBQUMsQ0FBQ3lCLEVBQUYsQ0FBSyxPQUFMO0FBQUgsQ0FBbEI7QUFFQTNCLENBQUMsQ0FBQzBCLE1BQUYsQ0FBUyxPQUFULEVBQWtCLE9BQWxCLEVBQTJCeEIsQ0FBQyxDQUFDMEIsS0FBRixDQUFRLENBQ2pDMUIsQ0FBQyxDQUFDMkIsSUFBRixDQUFPLENBQUUsd0JBQUYsQ0FBUCxFQUFxQyxHQUFyQyxDQURpQyxFQUVqQzNCLENBQUMsQ0FBQzRCLElBRitCLEVBR2pDNUIsQ0FBQyxDQUFDNkIsRUFBRixDQUFLLElBQUFDLGFBQUEsRUFBTyxNQUFQLENBQUwsQ0FIaUMsRUFJakM5QixDQUFDLENBQUMrQixTQUFGLENBQVksS0FBWixDQUppQyxFQUtqQy9CLENBQUMsQ0FBQ2dDLEtBQUYsQ0FBUSxPQUFSLENBTGlDLENBQVIsQ0FBM0I7QUFRQWxDLENBQUMsQ0FBQzBCLE1BQUYsQ0FBUyxNQUFULEVBQWlCO1NBQUczQixPQUFBO0FBQUgsQ0FBakIifQ==
//# sourceURL=tasks/index.coffee